AWSTemplateFormatVersion: "2010-09-09"
Description: Stack that will deployed across all accounts in an org so we can assume to read data using a lambda
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Deployment parameters"
        Parameters:
          - ManagementAccountID
          - ManagementAccountRole
          - DataCollectionAccountID
          - MultiAccountRoleName
          - OrganizationalUnitID
          - AllowModuleReadInMgmt
          - RolePrefix
          - CFNTemplateSourceBucket
      - Label:
          default: "Data collectors settings"
        Parameters:
          - DestinationBucket
          - DatabaseName
          - Schedule
      - Label:
          default: "Available modules"
        Parameters:
          - IncludeBudgetsModule
          - IncludeComputeOptimizerModule
          - ComputeOptimizerRegions
          - IncludeCostAnomalyModule
          - IncludeECSChargebackModule
          - IncludeInventoryCollectorModule
          - IncludeOrgDataModule
          - IncludeRDSUtilizationModule
          - IncludeRightsizingModule
          - IncludeTAModule
          - IncludeTransitGatewayModule
    ParameterLabels:
      ManagementAccountID:
        default: "Comma Delimited list of Account IDs for all Management Account IDs data collectors will fetch data from"
      ManagementAccountRole:
        default: "Management account role"
      DataCollectionAccountID:
        default: "Cost Account Id"
      MultiAccountRoleName:
        default: "Multi Account Role Name"
      OrganizationalUnitID:
        default: "Comma Delimited list of Organizational Unit IDs used as deployment targets for stacksets. Data collectors will fetch data from accounts within these organizational units."
      AllowModuleReadInMgmt:
        default: "Allow creation of read roles for modules in management account"
      RolePrefix:
        default: "Role Prefix"
      CFNTemplateSourceBucket:
        default: "DO NOT CHANGE - A bucket that contains WA-Labs CloudFormation templates. Must be always 'aws-well-architected-labs'"
      DestinationBucket:
        default: "Destination S3 bucket"
      DatabaseName:
        default: "Name of the Athena database to be created to hold lambda information"
      Schedule:
        default: "Schedule swap to cron(0 8 1 * ? *) for 1st day of the month"
      IncludeBudgetsModule:
        default: "Include AWS Budgets Collection Module"
      IncludeComputeOptimizerModule:
        default: "Include AWS Compute Optimizer Data Collection Module"
      ComputeOptimizerRegions:
        default: "Comma Delimited list of AWS regions where AWS Compute Optimizer data will be collected."
      IncludeCostAnomalyModule:
        default: "Include Cost Anomalies Data Collection Module"
      IncludeECSChargebackModule:
        default: "Include ECS Chargeback Data Collection Module"
      IncludeInventoryCollectorModule:
        default: "Include Inventory Collector Module"
      IncludeOrgDataModule:
        default: "Include AWS Organization Data Collection Module"
      IncludeRDSUtilizationModule:
        default: "Include RDS Utilization Data Collection Module"
      IncludeRightsizingModule:
        default: "Include Rightsizing Recommendations Data Collection Module"
      IncludeTAModule:
        default: "Include AWS Trusted Advisor Data Collection Module"
      IncludeTransitGatewayModule:
        default: "Include AWS TransitGateway Collection Module"
Parameters:
  ManagementAccountID:
    Type: String
    AllowedPattern: ([a-z0-9\-, ]*?$)
    Description: "(Ex: 123456789,098654321,789054312) List of Payer IDs you wish to collect data for. Can just be one Accounts"
  ManagementAccountRole:
    Type: String
    Description: The name of the IAM role that will be deployed in the management account which can retrieve AWS Organization data. KEEP THE SAME AS WHAT IS DEPLOYED INTO MANAGEMENT ACCOUNT
    Default: Lambda-Assume-Role-Management-Account
  DataCollectionAccountID:
    Type: String
    Description: AccountId of where the collector is deployed
  MultiAccountRoleName:
    Type: String
    Description: The name of the IAM role that will be deployed from the management account to linked accounts as a read only role. KEEP THE SAME AS WHAT IS DEPLOYED INTO MANAGEMENT ACCOUNT
    Default: "Optimization-Data-Multi-Account-Role"
  OrganizationalUnitID:
    Type: String
    AllowedPattern: ^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$
    Description: "(Ex: r-ab01,ou-ab01-abcd1234) List of Organizational Unit IDs you wish to collect data for. It can be a single organizational unit. The organization root ID is usually preferred to collect data from all the member accounts."
  AllowModuleReadInMgmt:
    Type: String
    Description: Allows the creation of the read data roles for modules in the management account
    AllowedValues:
      - "yes"
      - "no"
  RolePrefix:
    Type: String
    Description: This prefix will be placed in front of all roles created. Note you may wish to add a dash at the end to make more readable e.g. prefix-
    Default: "WA-"
  CFNTemplateSourceBucket:
    Type: String
    Description: "DO NOT CHANGE - A bucket that contains WA-Labs CloudFormation templates. Must be allways 'aws-well-architected-labs'"
    Default: "aws-well-architected-labs"
  DestinationBucket:
    Type: String
    Description: Name of the S3 Bucket that needs to be created to hold information
    AllowedPattern: (?=^.{3,36}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9\-])$)
    Default: costoptimizationdata
  DatabaseName:
    Type: String
    Description: Name of the Athena database to be created to hold lambda information
    Default: optimization_data
  Schedule:
    Type: String
    Description: Cron job to trigger the lambda using cloudwatch event
    Default: "rate(14 days)"
  IncludeBudgetsModule:
    Type: String
    Description: Collects budgets from your accounts
    AllowedValues:
      - "yes"
      - "no"
  IncludeComputeOptimizerModule:
    Type: String
    Description: Collects AWS Compute Optimizer service recommendations
    AllowedValues:
      - "yes"
      - "no"
  ComputeOptimizerRegions:
    Default: ""
    Type: String
    Description: "Ex: us-east-1,us-east-2,us-west-1,us-west-2,eu-central-1,eu-west-1,eu-west-2,eu-west-3  if empty, the current region will be used. You can add regions later by updating the stack."
    AllowedPattern: ([a-z0-9\-, ]*?$)
  IncludeCostAnomalyModule:
    Type: String
    Description: "Collects AWS Cost Explorer Cost Anomalies Recommendations"
    AllowedValues:
      - "yes"
      - "no"
  IncludeECSChargebackModule:
    Type: String
    Description: Collects data which shows costs associated with ECS Tasks leveraging EC2 instances within a Cluster
    AllowedValues:
      - "yes"
      - "no"
  IncludeInventoryCollectorModule:
    Type: String
    Description: Collects data about AMIs, EBS volumes and snapshots
    AllowedValues:
      - "yes"
      - "no"
  IncludeOrgDataModule:
    Type: String
    Description: Collects AWS Organizations data such as account Id, account name, organization parent and specified tags
    AllowedValues:
      - "yes"
      - "no"
  IncludeRDSUtilizationModule:
    Type: String
    Description: Collects RDS CloudWatch metrics from your accounts
    AllowedValues:
      - "yes"
      - "no"
  IncludeRightsizingModule:
    Type: String
    Description: "Collects AWS Cost Explorer Rightsizing Recommendations"
    AllowedValues:
      - "yes"
      - "no"
  IncludeTAModule:
    Type: String
    Description: Collects AWS Trusted Advisor recommendations data
    AllowedValues:
      - "yes"
      - "no"
  IncludeTransitGatewayModule:
    Type: String
    Description: Collects TransitGateway from your accounts
    AllowedValues:
      - "yes"
      - "no"

Conditions:
  DeployModuleReadInMgmt: !Equals [!Ref AllowModuleReadInMgmt, "yes"]

Resources:
  DataCollectorMgmtAccountReadStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${CFNTemplateSourceBucket}.s3.amazonaws.com/cfn/data-collection/deploy-in-management-account.yaml"
      Parameters:
        DataCollectionAccountID: !Ref DataCollectionAccountID
        ManagementAccountRole: !Ref ManagementAccountRole
        RolePrefix: !Ref RolePrefix
        IncludeComputeOptimizerModule: !Ref IncludeComputeOptimizerModule
        IncludeCostAnomalyModule: !Ref IncludeCostAnomalyModule
        IncludeOrgDataModule: !Ref IncludeOrgDataModule
        IncludeRightsizingModule: !Ref IncludeRightsizingModule
  DataCollectorMgmtAccountModulesReadStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployModuleReadInMgmt
    Properties:
      TemplateURL: !Sub "https://${CFNTemplateSourceBucket}.s3.amazonaws.com/cfn/data-collection/deploy-in-linked-account.yaml"
      Parameters:
        DataCollectionAccountID: !Ref DataCollectionAccountID
        MultiAccountRoleName: !Ref MultiAccountRoleName
        RolePrefix: !Ref RolePrefix
        IncludeTAModule: !Ref IncludeTAModule
        IncludeInventoryCollectorModule: !Ref IncludeInventoryCollectorModule
        IncludeECSChargebackModule: !Ref IncludeECSChargebackModule
        IncludeRDSUtilizationModule: !Ref IncludeRDSUtilizationModule
        IncludeBudgetsModule: !Ref IncludeBudgetsModule
        IncludeTransitGatewayModule: !Ref IncludeTransitGatewayModule
  DataCollectorOrgAccountModulesReadStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      Description: "StackSet in charge of deploying read roles across organisation accounts"
      PermissionModel: SERVICE_MANAGED
      AutoDeployment:
        Enabled: false
      ManagedExecution:
        Active: true
      Parameters:
        - ParameterKey: DataCollectionAccountID
          ParameterValue: !Ref DataCollectionAccountID
        - ParameterKey: MultiAccountRoleName
          ParameterValue: !Ref MultiAccountRoleName
        - ParameterKey: RolePrefix
          ParameterValue: !Ref RolePrefix
        - ParameterKey: IncludeTAModule
          ParameterValue: !Ref IncludeTAModule
        - ParameterKey: IncludeInventoryCollectorModule
          ParameterValue: !Ref IncludeInventoryCollectorModule
        - ParameterKey: IncludeECSChargebackModule
          ParameterValue: !Ref IncludeECSChargebackModule
        - ParameterKey: IncludeRDSUtilizationModule
          ParameterValue: !Ref IncludeRDSUtilizationModule
        - ParameterKey: IncludeBudgetsModule
          ParameterValue: !Ref IncludeBudgetsModule
        - ParameterKey: IncludeTransitGatewayModule
          ParameterValue: !Ref IncludeTransitGatewayModule
      StackInstancesGroup:
        - DeploymentTargets:
            OrganizationalUnitIds: !Split [",", !Ref OrganizationalUnitID]
          Regions:
            - !Ref "AWS::Region"
      Capabilities:
        - CAPABILITY_IAM
        - CAPABILITY_NAMED_IAM
      StackSetName: !Sub "StackSet-${AWS::AccountId}-OptimizationDataRole"
      TemplateURL: !Sub "https://${CFNTemplateSourceBucket}.s3.amazonaws.com/cfn/data-collection/deploy-in-linked-account.yaml"
