AWSTemplateFormatVersion: '2010-09-09'
Description: Stack that will deployed across all accounts in an org so we can assume to read data using a lambda 
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: 'Deployment parameters'
      Parameters:
        - DataCollectionAccountID
        - MultiAccountRoleName
        - ResourcePrefix
       # - DataCollectionBusArn
    - Label:
        default: 'Available modules'
      Parameters:
        - IncludeTAModule
        - IncludeInventoryCollectorModule
        - IncludeECSChargebackModule
        - IncludeRDSUtilizationModule
        - IncludeBudgetsModule
        - IncludeTransitGatewayModule
        - IncludeHealthModule
        # - IncludeCasesModule
    ParameterLabels:
      DataCollectionAccountID:
        default: 'Data Collection Account ID'
      MultiAccountRoleName:
        default: 'Multi Account Role Name'
      ResourcePrefix:
        default: "Role Prefix"
      IncludeTAModule:
        default: 'Include AWS Trusted Advisor Data Collection Module'
      IncludeInventoryCollectorModule:
        default: 'Include Inventory Collector Module'
      IncludeECSChargebackModule:
        default: 'Include ECS Chargeback Data Collection Module'
      IncludeRDSUtilizationModule:
        default: 'Include RDS Utilization Data Collection Module'
      IncludeBudgetsModule:
        default: 'Include Budgets Collection Module'
      IncludeTransitGatewayModule:
        default: 'Include Transit Gateway Module'
      IncludeHealthModule:
        default: 'Include Health Module'
      # IncludeCasesModule:
      #   default: 'Include Health Module'
Parameters:
  DataCollectionAccountID:
    Type: String
    Description: AccountId of where the collector is deployed
  MultiAccountRoleName:
    Type: String
    Description: The name of the IAM role that will be deployed from the management account to linked accounts as a read only role. KEEP THE SAME AS WHAT IS DEPLOYED INTO MANAGEMENT ACCOUNT
    Default: "Optimization-Data-Multi-Account-Role"
  ResourcePrefix:
    Type: String
    Description: This prefix will be placed in front of all roles created. Note you may wish to add a dash at the end to make more readable e.g. prefix-
    Default: "CID-DC-"
  #DataCollectionBusArn:
  #  Type: String
  #  Description: 'Centerlized DataCollection EventBus Arn in data collection account'
  CFNTemplateSourceBucket:
    Type: String
    Description: "DO NOT CHANGE - A bucket that contains WA-Labs CloudFormation templates. Must be allways 'aws-managed-cost-intelligence-dashboards'"
    Default: "aws-managed-cost-intelligence-dashboards"
  IncludeTAModule:
    Type: String
    Description: Collects AWS Trusted Advisor recommendations data
    AllowedValues:
      - "yes"
      - "no"
  IncludeInventoryCollectorModule:
    Type: String
    Description: Collects data about AMIs, EBS volumes and snapshots
    AllowedValues:
      - "yes"
      - "no"
  IncludeECSChargebackModule:
    Type: String
    Description: Collects data which shows costs associated with ECS Tasks leveraging EC2 instances within a Cluster
    AllowedValues:
      - "yes"
      - "no"
  IncludeRDSUtilizationModule:
    Type: String
    Description: Collects RDS CloudWatch metrics from your accounts
    AllowedValues:
      - "yes"
      - "no"
  IncludeBudgetsModule:
    Type: String
    Description: Collects budgets from your accounts
    AllowedValues:
      - "yes"
      - "no"
  IncludeTransitGatewayModule:
    Type: String
    Description: Collects TransitGateway from your accounts
    AllowedValues:
      - "yes"
      - "no"
  IncludeHealthModule:
    Type: String
    Description: Collects AWS Health from your accounts. DO NOT enable if DataCollection is deployed in delegated health account.
    AllowedValues:
      - "yes"
      - "no"
  # IncludeCasesModule:
  #   Type: String
  #   Description: Collects AWS Support Cases from your accounts
  #   AllowedValues:
  #     - "yes"
  #     - "no"

Conditions:
  IncludeTAModulePolicy: !Equals
    - !Ref IncludeTAModule
    - "yes"
  IncludeInventoryCollectorModulePolicy: !Equals
    - !Ref IncludeInventoryCollectorModule
    - "yes"
  IncludeECSChargebackModulePolicy: !Equals
    - !Ref IncludeECSChargebackModule
    - "yes"
  IncludeRDSUtilizationModulePolicy: !Equals
    - !Ref IncludeRDSUtilizationModule
    - "yes"
  IncludeBudgetsModulePolicy: !Equals
    - !Ref IncludeBudgetsModule
    - "yes"
  IncludeTransitGatewayModulePolicy: !Equals
    - !Ref IncludeTransitGatewayModule
    - "yes"
  IncludeHealthModule: !Equals
    - !Ref IncludeHealthModule 
    - "yes"
  # IncludeCasesModule: !Equals 
  #   - !Ref IncludeCasesModule 
  #   - "yes"

Outputs:
  LambdaRole:
    Description: For lambda to assume in cost account
    Value: !GetAtt LambdaRole.Arn
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ResourcePrefix}${MultiAccountRoleName}"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${DataCollectionAccountID}:root"
            Condition:
              ForAnyValue:ArnEquals:
                aws:PrincipalArn:
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}budgets-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}ecs-chargeback-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}inventory-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}rds-usage-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}transit-gateway-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}trusted-advisor-LambdaRole"
                  - !Sub "arn:aws:iam::${DataCollectionAccountID}:role/${ResourcePrefix}health-LambdaRole"
      Path: /
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "Role must have an explicit RoleName for traceability"
  TAPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeTAModulePolicy
    Properties:
      PolicyName: TAPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "support:DescribeTrustedAdvisorChecks"
              - "support:DescribeTrustedAdvisorCheckResult"
            Resource: "*" ## Policy is used for scanning of a wide range of resources
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"
  BudgetsReadOnlyPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeBudgetsModulePolicy
    Properties:
      PolicyName: BudgetsReadOnlyPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "budgets:ViewBudget"
              - "budgets:DescribeBudgets"
            Resource: "arn:aws:budgets::*:budget/*"
      Roles:
        - Ref: LambdaRole
  InventoryCollectorPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeInventoryCollectorModulePolicy
    Properties:
      PolicyName: InventoryCollectorPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:DescribeImages"
              - "ec2:DescribeVolumes"
              - "ec2:DescribeSnapshots"
              - "ec2:DescribeRegions"
              - "ec2:DescribeInstances"
              - "ec2:DescribeVpcs"
              - "rds:DescribeDBInstances"
              - "es:ListDomainNames"
              - "es:DescribeDomain"
              - "es:DescribeElasticsearchDomains"
              - "elasticache:DescribeCacheClusters"
            Resource: "*" ## Policy is used for scanning of a wide range of resources
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"
  ECSChargebackPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeECSChargebackModulePolicy
    Properties:
      PolicyName: ECSChargebackPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ecs:ListServices"
              - "ecs:DescribeServices"
              - "ecs:ListClusters"
              - "ec2:DescribeRegions"
            Resource: "*" ## Policy is used for scanning of a wide range of resources
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"
  RDSUtilizationPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeRDSUtilizationModulePolicy
    Properties:
      PolicyName: RDSUtilizationPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "rds:DescribeDBInstances"
            Resource: "*"  ## Policy is used for scanning of a wide range of resources
          - Effect: "Allow"
            Action:
              - "ec2:DescribeRegions"
              - "cloudwatch:GetMetricStatistics"
            Resource: "*" ## Policy is used for scanning of a wide range of resources
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"
  TransitGatewayPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeTransitGatewayModulePolicy
    Properties:
      PolicyName: TransitGatewayPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "ec2:DescribeTransitGatewayAttachments"
              - "cloudwatch:Describe*"
              - "cloudwatch:Get*"
              - "cloudwatch:List*"
            Resource: "*" ## Policy is used for scanning of a wide range of resources
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"
  HealthBackfillPolicy:
    Type: 'AWS::IAM::Policy'
    Condition: IncludeHealthModule
    Properties:
      PolicyName: Healthapiaccess
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - health:DescribeEvents
                - health:DescribeEventDetails
                - health:DescribeAffectedEntities
              Resource: "*"
            - Effect: Allow
              Action:
                - "events:PutEvents"
              Resource: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default"
      Roles:
        - Ref: LambdaRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: "Policy is used for scanning of a wide range of resources"

  DataCollectionRuleRole:
    Condition: IncludeHealthModule
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: PutToDataCollectionBusPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "events:PutEvents"
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${DataCollectionAccountID}:event-bus/${ResourcePrefix}DataCollectionBus"

  DefaultBusRuleHealth:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "EventBridge default rule for aws.health events"
      EventBusName: "default"
      EventPattern:
        source:
          - "aws.health"
          - "awshealthtest"
      Targets:
        - Id: DataCollectionRuleOnDefaultBus
          Arn: !Sub "arn:aws:events:${AWS::Region}:${DataCollectionAccountID}:event-bus/${ResourcePrefix}DataCollectionBus"
          RoleArn: !GetAtt  DataCollectionRuleRole.Arn

