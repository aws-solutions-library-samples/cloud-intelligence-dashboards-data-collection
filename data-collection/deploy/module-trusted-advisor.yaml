AWSTemplateFormatVersion: '2010-09-09'
Description: Retrieves Inventory data for the chosen service
Parameters:
  DatabaseName:
    Type: String
    Description: Name of the Athena database to be created to hold lambda information
    Default: optimization_data
  DataBucketsKmsKeysArns:
    Type: String
    Description: KMS Key ARNs used for encrypting data in S3 buckets (comma separated)
  DestinationBucket:
    Type: String
    Description: Name of the S3 Bucket to be created to hold data information
    AllowedPattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
  DestinationBucketARN:
    Type: String
    Description: ARN of the S3 Bucket that exists or needs to be created to hold rightsizing information
  MultiAccountRoleName:
    Type: String
    Description: Name of the IAM role deployed in all accounts which can retrieve AWS Data.
  CFDataName:
    Type: String
    Description: The name of what this cf is doing.
    Default: trusted-advisor
  GlueRoleARN:
    Type: String
    Description: Arn for the Glue Crawler role
  Schedule:
    Type: String
    Description: EventBridge Schedule to trigger the data collection
    Default: "rate(14 days)"
  ResourcePrefix:
    Type: String
    Description: This prefix will be placed in front of all roles created. Note you may wish to add a dash at the end to make more readable
  LambdaAnalyticsARN:
    Type: String
    Description: Arn of lambda for Analytics
  AccountCollectorLambdaARN:
    Type: String
    Description: Arn of the Account Collector Lambda
  CodeBucket:
    Type: String
    Description: Source code bucket
  StepFunctionTemplate:
    Type: String
    Description: S3 key to the JSON template for the StepFunction
  StepFunctionExecutionRoleARN:
    Type: String
    Description: Common role for Step Function execution
  SchedulerExecutionRoleARN:
    Type: String
    Description: Common role for module Scheduler execution
  LambdaManageGlueTableARN:
    Type: String
    Description: ARN of a Lambda for Managing GlueTable
Outputs:
  StepFunctionARN:
    Description: ARN for the module's Step Function
    Value: !GetAtt ModuleStepFunction.Arn

Conditions:
  NeedDataBucketsKms: !Not [!Equals [!Ref DataBucketsKmsKeysArns, '']]

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ResourcePrefix}${CFDataName}-LambdaRole"
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub "lambda.${AWS::URLSuffix}"
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Path: /
      Policies:
        - !If
          - NeedDataBucketsKms
          - PolicyName: "KMS"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "kms:GenerateDataKey"
                  Resource: !Split [ ',', !Ref DataBucketsKmsKeysArns ]
          - !Ref AWS::NoValue
        - PolicyName: "AssumeMultiAccountRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sts:AssumeRole"
                Resource: !Sub "arn:${AWS::Partition}:iam::*:role/${MultiAccountRoleName}"
        - PolicyName: "S3Access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                Resource:
                  - !Sub "${DestinationBucketARN}/*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28 # Resource found with an explicit name, this disallows updates that require replacement of this resource
            reason: "Need explicit name to identify role actions"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ResourcePrefix}${CFDataName}-Lambda'
      Description: !Sub "Lambda function to retrieve ${CFDataName}"
      Runtime: python3.12
      Architectures: [x86_64]
      Code:
        ZipFile: |
          import os
          import json
          from datetime import date, datetime
          from json import JSONEncoder

          import boto3
          from botocore.client import Config
          from botocore.exceptions import ClientError
          import logging

          PREFIX = os.environ["PREFIX"]
          BUCKET = os.environ["BUCKET_NAME"]
          ROLE_NAME = os.environ['ROLENAME']
          COSTONLY = os.environ.get('COSTONLY', 'no').lower() == 'yes'
          TMP_FILE = "/tmp/data.json"
          REGIONS = ["us-east-1"]

          #config to avoid ThrottlingException
          config = Config(
            retries = {
                'max_attempts': 10,
                'mode': 'standard'
            }
          )

          logger = logging.getLogger(__name__)
          logger.setLevel(getattr(logging, os.environ.get('LOG_LEVEL', 'INFO').upper(), logging.INFO))

          def lambda_handler(event, context):
              collection_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
              if 'account' not in event:
                  raise ValueError(
                      "Please do not trigger this Lambda manually."
                      "Find the corresponding state machine in Step Functions and Trigger from there."
                  )
              try:
                  account = json.loads(event["account"])
                  account_id = account["account_id"]
                  account_name = account["account_name"]
                  payer_id = account["payer_id"]
                  logger.info(f"Collecting data for account: {account_id}")
                  read_ta(account_id, account_name)
                  upload_to_s3(account_id, payer_id)
              except Exception as e:
                  logging.warning(e)

          def upload_to_s3(account_id, payer_id):
              if os.path.getsize(TMP_FILE) == 0:
                  print(f"No data in file for {PREFIX}")
                  return
              d = datetime.now()
              month = d.strftime("%m")
              year = d.strftime("%Y")
              _date = d.strftime("%d%m%Y-%H%M%S")
              key = f"{PREFIX}/{PREFIX}-data/payer_id={payer_id}/year={year}/month={month}/{PREFIX}-{account_id}-{_date}.json"
              try:
                  boto3.client("s3").upload_file(TMP_FILE, BUCKET, key)
                  print(f"Data for {account_id} in s3 - {key}")
              except Exception as e:
                  print(f"{type(e)}: {e}")

          def assume_role(account_id, service, region, role):
              partition = boto3.session.Session().get_partition_for_region(region_name=region)
              assumed = boto3.client('sts', region_name=region).assume_role(
                  RoleArn=f"arn:{partition}:iam::{account_id}:role/{role}",
                  RoleSessionName='data_collection'
              )
              creds = assumed['Credentials']
              return boto3.client(service, region_name=region,
                  aws_access_key_id=creds['AccessKeyId'],
                  aws_secret_access_key=creds['SecretAccessKey'],
                  aws_session_token=creds['SessionToken'],
                  config=config,
              )

          def _json_serial(self, obj):
              if isinstance(obj, (datetime, date)): return obj.isoformat()
              return JSONEncoder.default(self, obj)

          def read_ta(account_id, account_name):
              f = open(TMP_FILE, "w")
              support = assume_role(account_id, "support", REGIONS[0], ROLE_NAME)
              checks = support.describe_trusted_advisor_checks(language="en")["checks"]
              for check in checks:
                  #print(json.dumps(check))
                  if (COSTONLY and check.get("category") != "cost_optimizing"): continue
                  try:
                      result = support.describe_trusted_advisor_check_result(checkId=check["id"], language="en")['result']
                      #print(json.dumps(result))
                      if result.get("status") == "not_available": continue
                      dt = result['timestamp']
                      ts = datetime.strptime(dt, '%Y-%m-%dT%H:%M:%SZ').strftime('%s')
                      for resource in result["flaggedResources"]:
                          output = {}
                          if "metadata" in resource:
                              output.update(dict(zip(check["metadata"], resource["metadata"])))
                              del resource['metadata']
                          resource["Region"] = resource.pop("region") if "region" in resource else '-'
                          resource["Status"] = resource.pop("status") if "status" in resource else '-'
                          output.update({"AccountId":account_id, "AccountName":account_name, "Category": check["category"], 'DateTime': dt, 'Timestamp': ts, "CheckName": check["name"], "CheckId": check["id"]})
                          output.update(resource)
                          output = {k.lower(): v for k, v in output.items()}
                          f.write(json.dumps(output, default=_json_serial) + "\n")
                  except Exception as e:
                      print(f'{type(e)}: {e}')
      Handler: 'index.lambda_handler'
      MemorySize: 2688
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref DestinationBucket
          PREFIX: !Ref CFDataName
          ROLENAME: !Ref MultiAccountRoleName
          COSTONLY: "no"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89 # Lambda functions should be deployed inside a VPC
            reason: "No need for VPC in this case"
          - id: W92 #  Lambda functions should define ReservedConcurrentExecutions to reserve simultaneous executions
            reason: "No need for simultaneous execution"

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
      RetentionInDays: 60

  Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Sub '${ResourcePrefix}${CFDataName}-Crawler'
      Role: !Ref GlueRoleARN
      DatabaseName: !Ref DatabaseName
      Targets:
        S3Targets:
          - Path: !Sub "s3://${DestinationBucket}/${CFDataName}/${CFDataName}-data/"
      Configuration: "{\"Version\":1.0,\"Grouping\":{\"TableGroupingPolicy\":\"CombineCompatibleSchemas\"}}"

  ModuleGlueTable:
    Type: Custom::ManageGlueTable
    Properties:
      ServiceToken: !Ref LambdaManageGlueTableARN
      TableInput:
        Name: trusted_advisor_data
        TableType: EXTERNAL_TABLE
        PartitionKeys:
        - Name: payer_id
          Type: string
        - Name: year
          Type: string
        - Name: month
          Type: string
        StorageDescriptor:
          Columns:
          - Name: region
            Type: string
          - Name: service
            Type: string
          - Name: limit name
            Type: string
          - Name: limit amount
            Type: string
          - Name: current usage
            Type: string
          - Name: status
            Type: string
          - Name: accountid
            Type: string
          - Name: accountname
            Type: string
          - Name: category
            Type: string
          - Name: datetime
            Type: string
          - Name: timestamp
            Type: string
          - Name: checkname
            Type: string
          - Name: checkid
            Type: string
          - Name: resourceid
            Type: string
          - Name: issuppressed
            Type: boolean
          - Name: resource
            Type: string
          - Name: aws config rule
            Type: string
          - Name: input parameters
            Type: string
          - Name: last updated time
            Type: string
          - Name: region/az
            Type: string
          - Name: function name
            Type: string
          - Name: function version
            Type: string
          - Name: memory size(mb)
            Type: string
          - Name: recommended memory size(mb)
            Type: string
          - Name: lookback period (days)
            Type: string
          - Name: performance risk
            Type: string
          - Name: db instance
            Type: string
          - Name: vpc id
            Type: string
          - Name: multi-az
            Type: string
          - Name: workload arn
            Type: string
          - Name: workload name
            Type: string
          - Name: reviewer name
            Type: string
          - Name: workload type
            Type: string
          - Name: workload started date
            Type: string
          - Name: workload last modified date
            Type: string
          - Name: number of identified hris for performance
            Type: string
          - Name: number of hris resolved for performance
            Type: string
          - Name: number of questions answered for performance
            Type: string
          - Name: total number of questions in performance pillar
            Type: string
          - Name: number of identified hris for security
            Type: string
          - Name: number of hris resolved for security
            Type: string
          - Name: number of questions answered for security
            Type: string
          - Name: total number of questions in security pillar
            Type: string
          - Name: number of identified hris for reliability
            Type: string
          - Name: number of hris resolved for reliability
            Type: string
          - Name: number of questions answered for reliability
            Type: string
          - Name: total number of questions in reliability pillar
            Type: string
          - Name: number of identified hris for cost optimization
            Type: string
          - Name: number of hris resolved for cost optimization
            Type: string
          - Name: number of questions answered for cost optimization
            Type: string
          - Name: total number of questions in cost optimization pillar
            Type: string
          - Name: trail name
            Type: string
          - Name: logging status
            Type: string
          - Name: bucket name
            Type: string
          - Name: last delivery error
            Type: string
          - Name: aws account id
            Type: string
          - Name: security group name
            Type: string
          - Name: security group id
            Type: string
          - Name: protocol
            Type: string
          - Name: port
            Type: string
          - Name: ip range
            Type: string
          - Name: db instance identifier
            Type: string
          - Name: db instance arn
            Type: string
          - Name: deployment type
            Type: string
          - Name: backup type
            Type: string
          - Name: reason
            Type: string
          - Name: ecs cluster name/ecs service name
            Type: string
          - Name: number of availability zones
            Type: string
          - Name: spread task placement strategy enabled and applied correctly
            Type: string
          - Name: freestoragespace metric (mb)
            Type: string
          - Name: db instance allocated storage (mb)
            Type: string
          - Name: db instance storage used percent
            Type: string
          - Name: db instance name
            Type: string
          - Name: instance type
            Type: string
          - Name: storage provisioned (gb)
            Type: string
          - Name: days since last connection
            Type: string
          - Name: estimated monthly savings (on demand)
            Type: string
          - Name: instance id
            Type: string
          - Name: instance name
            Type: string
          - Name: estimated monthly savings
            Type: string
          - Name: day 1
            Type: string
          - Name: day 2
            Type: string
          - Name: day 3
            Type: string
          - Name: day 4
            Type: string
          - Name: day 5
            Type: string
          - Name: day 6
            Type: string
          - Name: day 7
            Type: string
          - Name: day 8
            Type: string
          - Name: day 9
            Type: string
          - Name: day 10
            Type: string
          - Name: day 11
            Type: string
          - Name: day 12
            Type: string
          - Name: day 13
            Type: string
          - Name: day 14
            Type: string
          - Name: 14-day average cpu utilization
            Type: string
          - Name: 14-day average network i/o
            Type: string
          - Name: number of days low utilization
            Type: string
          - Name: engine name
            Type: string
          - Name: db instance class
            Type: string
          - Name: task definition arn
            Type: string
          - Name: container definition names
            Type: string
          - Name: password policy
            Type: string
          - Name: uppercase
            Type: string
          - Name: lowercase
            Type: string
          - Name: number
            Type: string
          - Name: non-alphanumeric
            Type: string
          - Name: function arn
            Type: string
          - Name: runtime
            Type: string
          - Name: days to deprecation
            Type: string
          - Name: deprecation date
            Type: string
          - Name: average daily invokes
            Type: string
          - Name: last refresh time
            Type: string
          - Name: diskqueuedepth metric
            Type: string
          - Name: versioning
            Type: string
          - Name: mfa delete enabled
            Type: string
          - Name: engine version current
            Type: string
          - Name: recommended value
            Type: string
          - Name: the function with version which is flagged.
            Type: string
          - Name: current day async requests dropped percentage.
            Type: string
          - Name: current day async requests.
            Type: string
          - Name: average daily async requests dropped percentage.
            Type: string
          - Name: average daily async requests.
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Location: !Sub "s3://${DestinationBucket}/${CFDataName}/${CFDataName}-data/"
          SerdeInfo:
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
            Parameters:
              paths: 14-day average cpu utilization,14-day average network i/o,accountid,accountname,average
                daily async requests dropped percentage.,average daily async requests.,average
                daily invokes,aws account id,aws config rule,backup type,bucket name,category,checkid,checkname,container
                definition names,current day async requests dropped percentage.,current
                day async requests.,current usage,datetime,day 1,day 10,day 11,day 12,day
                13,day 14,day 2,day 3,day 4,day 5,day 6,day 7,day 8,day 9,days since
                last connection,days to deprecation,db instance,db instance allocated
                storage (mb),db instance arn,db instance class,db instance identifier,db
                instance name,db instance storage used percent,deployment type,deprecation
                date,diskqueuedepth metric,ecs cluster name/ecs service name,engine
                name,engine version current,estimated monthly savings,estimated monthly
                savings (on demand),freestoragespace metric (mb),function arn,function
                name,function version,input parameters,instance id,instance name,instance
                type,ip range,issuppressed,last delivery error,last refresh time,last
                updated time,limit amount,limit name,logging status,lookback period
                (days),lowercase,memory size(mb),mfa delete enabled,multi-az,non-alphanumeric,number,number
                of availability zones,number of days low utilization,number of hris
                resolved for cost optimization,number of hris resolved for performance,number
                of hris resolved for reliability,number of hris resolved for security,number
                of identified hris for cost optimization,number of identified hris for
                performance,number of identified hris for reliability,number of identified
                hris for security,number of questions answered for cost optimization,number
                of questions answered for performance,number of questions answered for
                reliability,number of questions answered for security,password policy,performance
                risk,port,protocol,reason,recommended memory size(mb),recommended value,region,region/az,resource,resourceid,reviewer
                name,runtime,security group id,security group name,service,spread task
                placement strategy enabled and applied correctly,status,storage provisioned
                (gb),task definition arn,the function with version which is flagged.,timestamp,total
                number of questions in cost optimization pillar,total number of questions
                in performance pillar,total number of questions in reliability pillar,total
                number of questions in security pillar,trail name,uppercase,versioning,vpc
                id,workload arn,workload last modified date,workload name,workload started
                date,workload type
        Parameters:
          UPDATED_BY_CRAWLER: !Sub "${ResourcePrefix}${CFDataName}-Crawler"

  ModuleStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub '${ResourcePrefix}${CFDataName}-StateMachine'
      StateMachineType: STANDARD
      RoleArn: !Ref StepFunctionExecutionRoleARN
      DefinitionS3Location:
        Bucket: !Ref CodeBucket
        Key: !Ref StepFunctionTemplate
      DefinitionSubstitutions:
        AccountCollectorLambdaARN: !Ref AccountCollectorLambdaARN
        ModuleLambdaARN: !GetAtt LambdaFunction.Arn
        Crawlers: !Sub '["${ResourcePrefix}${CFDataName}-Crawler"]'
        CollectionType: "LINKED"
        Params: ''
        Module: !Ref CFDataName
        DeployRegion: !Ref AWS::Region
        Account: !Ref AWS::AccountId
        Prefix: !Ref ResourcePrefix

  ModuleRefreshSchedule:
    Type: 'AWS::Scheduler::Schedule'
    Properties:
      Description: !Sub 'Scheduler for the ODC ${CFDataName} module'
      Name: !Sub '${ResourcePrefix}${CFDataName}-RefreshSchedule'
      ScheduleExpression: !Ref Schedule
      State: ENABLED
      FlexibleTimeWindow:
        MaximumWindowInMinutes: 30
        Mode: 'FLEXIBLE'
      Target:
        Arn: !GetAtt ModuleStepFunction.Arn
        RoleArn: !Ref SchedulerExecutionRoleARN
        Input: !Sub '{"module_lambda":"${LambdaFunction.Arn}","crawlers": ["${ResourcePrefix}${CFDataName}-Crawler"]}'

  AnalyticsExecutor:
    Type: Custom::LambdaAnalyticsExecutor
    Properties:
      ServiceToken: !Ref LambdaAnalyticsARN
      Name: !Ref CFDataName
