{
    "Comment": "Orchestrate the collection of ${Module} data",
    "StartAt": "AccountCollectorInvoke",
    "States": {
      "AccountCollectorInvoke": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "Payload": {
            "Type": "${CollectionType}"
          },
          "FunctionName": "${AccountCollectorLambdaARN}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Next": "AccountMap",
        "ResultPath": "$.accountLambdaOutput"
      },
      "AccountMap": {
        "Type": "Map",
        "ItemProcessor": {
          "ProcessorConfig": {
            "Mode": "INLINE"
          },
          "StartAt": "InvokeModuleLambda",
          "States": {
            "InvokeModuleLambda": {
              "Type": "Task",
              "Resource": "arn:aws:states:${DeployRegion}:${Account}:lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload": {
                  "account.$": "$.account",
                  "params": "${Params}"
                },
                "FunctionName": "${ModuleLambdaARN}"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        },
        "ItemsPath": "$.accountLambdaOutput.Payload.accountList",
        "Next": "CrawlerStepFunctionStartExecution",
        "MaxConcurrency": 60
      },
      "CrawlerStepFunctionStartExecution": {
        "Type": "Task",
        "Resource": "arn:aws:states:::states:startExecution.sync:2",
        "Parameters": {
          "StateMachineArn": "arn:aws:states:${DeployRegion}:${Account}:stateMachine:${Prefix}CrawlerExecution-StateMachine",
          "Input": {
            "crawlers": ${Crawlers}
          }
        },
        "End": true
      }
    },
    "TimeoutSeconds": 1200
  }